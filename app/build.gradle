apply plugin: 'com.android.application'
apply plugin: 'walle'
//apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion Integer.parseInt(compile_version)
    defaultConfig {
        applicationId "com.katyusha.aron.demo"
        minSdkVersion Integer.parseInt(min_version)
        targetSdkVersion Integer.parseInt(target_version)
        versionCode Integer.parseInt(version_code)
        versionName version_name
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ moduleName : project.getName() ]
            }
        }
//        ndk {
//            abiFilters "armeabi", "armeabi-v7a"
//        }
    }
    signingConfigs {//签名配置
        release {//发布版签名配置
            storeFile file("bailian.keystore")//密钥文件路径
            storePassword "bailian"//密钥文件密码
            keyAlias "bailian"//key别名
            keyPassword "bailian"//key密码
        }
        debug {//debug版签名配置
            storeFile file("debug.keystore")//密钥文件路径
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }
    buildTypes {
        release {
            buildConfigField("boolean","LOG","false")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField("boolean","LOG","true")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    walle {
        apkOutputFolder = new File("${project.buildDir}/outputs/katyusha")
        // 定制渠道包的APK的文件名称
        apkFileNameFormat = 'katyusha_${channel}.apk'
        // 渠道配置文件
        channelFile = new File("${project.getProjectDir()}/channel")
    }


    dataBinding {
        enabled = true
    }

    dexOptions {
        jumboMode true
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
//            proto {
//                srcDir 'src/main/proto' //指定.proto文件路径
//            }
        }
    }
}

//protobuf {
//    protoc {
//        artifact = 'com.google.protobuf:protoc:3.5.1' // 也可以配置本地编译器路径
//    }
//
//    generateProtoTasks {
//        all().each { task ->
//            task.builtins {
//                remove java
//            }
//            task.builtins {
//                java {}// 生产java源码
//            }
//        }
//    }
//    generatedFilesBaseDir = "$projectDir/src/generated"
//}
repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url "https://jitpack.io"
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:support-v4:${lib_support}"
    testImplementation 'junit:junit:4.12'
    implementation project(':library')
    implementation project(':goods')
    implementation project(':cart')
    implementation project(':kotlin')
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
    implementation "com.alibaba:arouter-api:${arouter_api_version}"
    annotationProcessor "com.alibaba:arouter-compiler:${arouter_compile_version}"
//    api 'com.google.protobuf:protobuf-java:3.5.1'
//    api 'com.google.protobuf:protoc:3.5.1'
}
